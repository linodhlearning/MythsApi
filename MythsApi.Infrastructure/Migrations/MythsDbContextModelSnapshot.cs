// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MythsApi.Infrastructure.Data;

#nullable disable

namespace MythsApi.Infrastructure.Migrations
{
    [DbContext(typeof(MythsDbContext))]
    partial class MythsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MythsApi.Core.Entities.Deity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PantheonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PantheonId");

                    b.ToTable("Deities");
                });

            modelBuilder.Entity("MythsApi.Core.Entities.Myth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DeityId")
                        .HasColumnType("int");

                    b.Property<string>("OriginPeriod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Story")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DeityId");

                    b.ToTable("Myths");
                });

            modelBuilder.Entity("MythsApi.Core.Entities.Pantheon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pantheons");
                });

            modelBuilder.Entity("MythsApi.Core.Entities.Deity", b =>
                {
                    b.HasOne("MythsApi.Core.Entities.Pantheon", "Pantheon")
                        .WithMany("Deities")
                        .HasForeignKey("PantheonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pantheon");
                });

            modelBuilder.Entity("MythsApi.Core.Entities.Myth", b =>
                {
                    b.HasOne("MythsApi.Core.Entities.Deity", "Deity")
                        .WithMany("Myths")
                        .HasForeignKey("DeityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deity");
                });

            modelBuilder.Entity("MythsApi.Core.Entities.Deity", b =>
                {
                    b.Navigation("Myths");
                });

            modelBuilder.Entity("MythsApi.Core.Entities.Pantheon", b =>
                {
                    b.Navigation("Deities");
                });
#pragma warning restore 612, 618
        }
    }
}
